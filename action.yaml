name: Terraform and Terragrunt Install
description: "Terraform and Terragrunt install, setup versions via tfenv and tgenv."
inputs:
  TerraformVersion:
    description: 'Terraform Version.'
    required: true
    default: ''
  TerragruntVersion:
    description: 'Terragrunt Version.'
    required: true
    default: ''
  TerragruntPath:
    description: 'Terragrunt folders.'
    required: true
    default: dev/us-east-1

runs:
  using: "composite"
  steps:
    - name: Terraform and Terragrunt Install
      run: |
        git \
        clone \
        --depth=1 \
        https://github.com/tfutils/tfenv.git \
        ~/.tfenv
      shell: bash

    - name: Terraform Setup Environment
      run: |
        echo  "$HOME/.tfenv/bin" >> $GITHUB_PATH
      shell: bash

    - name: Terraform Setup Version
      run: |
        tfenv install ${{ inputs.TerraformVersion }} && \
        tfenv use ${{ inputs.TerraformVersion }}
      shell: bash

    - name: Terragrunt Install
      run: |
        git \
        clone \
        https://github.com/cunymatthieu/tgenv.git \
        ~/.tgenv
      shell: bash

    - name: Terragrunt Setup Environment
      run: |
        echo  "$HOME/.tgenv/bin" >> $GITHUB_PATH
      shell: bash

    - name: Terragrunt Setup Version
      run: |
        tgenv install ${{ inputs.TerragruntVersion }} && \
        tgenv use ${{ inputs.TerragruntVersion }}
      shell: bash

    - name: Terragrunt Format
      run: |
        terragrunt hclfmt \
        --terragrunt-source-update \
        --terragrunt-non-interactive \
        --terragrunt-parallelism 1 \
        --terragrunt-working-dir dev/us-east-1
      shell: bash

    - name: Terragrunt Plan
      id: plan
      if: github.ref_name == 'test'
      run: |
        git config --global url."https://github.com/".insteadOf \
        ssh://git@github.com/ && \
        terragrunt run-all plan \
        --terragrunt-source-update \
        --terragrunt-non-interactive \
        --terragrunt-parallelism 1 \
        --terragrunt-working-dir dev/us-east-1
      shell: bash

    - name: Update Pull Request
      uses: actions/github-script@v5
      env:
        PLAN: "Terraform \n ${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform ⚙️\`${{ steps.init.outcome }}\`
          #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: ${{ github.event.inputs.PR_number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })