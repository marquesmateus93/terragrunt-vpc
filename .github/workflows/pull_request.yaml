name: Terragrunt VPC Deploy
on:
  pull_request:
    types:
      - opened

jobs:
  PullRequest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: TFEnv Install
        run: |
          git \
          clone \
          --depth=1 \
          https://github.com/tfutils/tfenv.git \
          ~/.tfenv && \
          echo  "$HOME/.tfenv/bin" >> $GITHUB_PATH
        shell: bash

      - name: Terraform Setup Version
        run: |
          tfenv install $TerraformVersion && \
          tfenv use $TerraformVersion
        shell: bash

      - name: TGEnv Install
        run: |
          git \
          clone \
          https://github.com/cunymatthieu/tgenv.git \
          ~/.tgenv && \
          echo  "$HOME/.tgenv/bin" >> $GITHUB_PATH
        shell: bash

      - name: Terragrunt Setup Version
        run: |
          tgenv install $TerragruntVersion && \
          tgenv use $TerragruntVersion
        shell: bash

      - name: Terragrunt Format
        run: |
          terragrunt hclfmt \
          --terragrunt-source-update \
          --terragrunt-non-interactive \
          --terragrunt-parallelism 1 \
          --terragrunt-working-dir $TerragruntPath
        shell: bash

      - name: Terragrunt Plan
        id: plan
        run: |
          git config --global url."https://github.com/".insteadOf \
          ssh://git@github.com/ && \
          terragrunt run-all plan \
          --terragrunt-source-update \
          --terragrunt-non-interactive \
          --terragrunt-parallelism 1 \
          --terragrunt-working-dir $TerragruntPath
        shell: bash

      - name: Update Pull Request
        uses: actions/github-script@v5
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: ${{ github.event.inputs.PR_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })